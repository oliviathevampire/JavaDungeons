plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'maven-publish'
	id 'checkstyle'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url="https://raw.githubusercontent.com/vampire-studios/VampireStudiosMaven/main/" }
	maven { url="https://maven.terraformersmc.com/" }
	maven { url "https://maven.shedaniel.me/" }
	maven{ url="https://jitpack.io" }
	maven {
		url "https://nexus.resourcefulbees.com/repository/maven-public/"
	}
}

minecraft {
	accessWidener = file("src/main/resources/dungeons.aw")
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
		force = true
	}

	modImplementation("me.shedaniel.cloth:cloth-config-fabric:5.0.34") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include("me.shedaniel.cloth:cloth-config-fabric:5.0.34") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation ("io.github.vampirestudios:VampireLib-Fabric:3.0.2+build.3-1.17-pre1") {
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "io.github.cottonmc"
	}
	include ("io.github.vampirestudios:VampireLib-Fabric:3.0.2+build.3-1.17-pre1") {
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "io.github.cottonmc"
	}

	modImplementation ("com.github.cottonmc:Jankson-Fabric:1.16-SNAPSHOT") {
		exclude group: "net.fabricmc.fabric-api"
		force = true
	}

	modImplementation "com.terraformersmc:modmenu:2.0.0-beta.7"
	modImplementation "com.telepathicgrunt:Blame-Fabric:1.17-4.0.0-fabric"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

checkstyle {
	configFile = rootProject.file("checkstyle.xml")
	toolVersion = "8.31"
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}